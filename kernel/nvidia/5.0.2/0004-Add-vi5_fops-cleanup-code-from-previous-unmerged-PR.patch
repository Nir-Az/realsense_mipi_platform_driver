From edcb7d4d704c111db14e8845a1669d962d5a4649 Mon Sep 17 00:00:00 2001
From: Xin Zhang <xin.x.zhang@intel.com>
Date: Fri, 11 Nov 2022 16:26:51 +0800
Subject: [PATCH] Add vi5_fops cleanup code from previous unmerged PR

This patch is part of the original PR:
https://github.com/IntelRealSense/perc_hw_ds5u_android-jetson_tx2/pull/107

Only the left cleanup is moved here, the IR metadata change in that PR
is not included.

Signed-off-by: Xin Zhang <xin.x.zhang@intel.com>
---
 .../media/platform/tegra/camera/vi/vi5_fops.c | 69 ++++++++++---------
 1 file changed, 35 insertions(+), 34 deletions(-)

diff --git a/drivers/media/platform/tegra/camera/vi/vi5_fops.c b/drivers/media/platform/tegra/camera/vi/vi5_fops.c
index 6e08f65ea..af790b60d 100644
--- a/drivers/media/platform/tegra/camera/vi/vi5_fops.c
+++ b/drivers/media/platform/tegra/camera/vi/vi5_fops.c
@@ -371,49 +371,52 @@ static void vi5_setup_surface(struct tegra_channel *chan,
 	chan->capture_descr_sequence += 1;
 }
 
+static void vi5_release_metadata_buffer(struct tegra_channel *chan,
+	struct vb2_v4l2_buffer *vbuf)
+{
+	struct vb2_buffer *evb = NULL;
+	struct vb2_v4l2_buffer *evbuf;
+	void* frm_buffer;
+
+	spin_lock(&chan->embedded.spin_lock);
+	if (0 < chan->embedded.num_buffers) {
+		evb = chan->embedded.buffers[chan->embedded.tail];
+		chan->embedded.buffers[chan->embedded.tail] = NULL;
+		chan->embedded.tail++;
+		if (chan->embedded.tail > 15)
+			chan->embedded.tail = chan->embedded.tail - 16;
+		chan->embedded.num_buffers--;
+	}
+	spin_unlock(&chan->embedded.spin_lock);
+
+	if (!evb)
+		return;
+
+	frm_buffer = vb2_plane_vaddr(evb, 0);
+	if (!frm_buffer)
+		return;
+
+	memcpy(frm_buffer, chan->emb_buf_addr, 255);
+	evbuf = to_vb2_v4l2_buffer(evb);
+	evbuf->sequence = vbuf->sequence;
+	vb2_set_plane_payload(evb, 0, 68);
+	evb->timestamp = vbuf->vb2_buf.timestamp;
+	vb2_buffer_done(evb, VB2_BUF_STATE_DONE);
+}
+
 static void vi5_release_buffer(struct tegra_channel *chan,
 	struct tegra_channel_buffer *buf)
 {
 	struct vb2_v4l2_buffer *vbuf = &buf->buf;
-	struct vb2_buffer *evb;
-	struct vb2_v4l2_buffer *evbuf;
 
 	vbuf->sequence = chan->sequence++;
 	vbuf->field = V4L2_FIELD_NONE;
 	vb2_set_plane_payload(&vbuf->vb2_buf, 0, chan->format.sizeimage);
 
-	evb = NULL;
-	if ((chan->embedded_data_height == 1)) {
-		void* frm_buffer;
-		spin_lock(&chan->embedded.spin_lock);
-		if (0 < chan->embedded.num_buffers ){
-			evb = chan->embedded.buffers[chan->embedded.tail];
-			chan->embedded.buffers[chan->embedded.tail] = NULL;
-			chan->embedded.tail++;
-			if (chan->embedded.tail > 15)
-					chan->embedded.tail = chan->embedded.tail - 16;
-			chan->embedded.num_buffers--;
-		}
-		spin_unlock(&chan->embedded.spin_lock);
-
-		if(evb) {
-			frm_buffer = vb2_plane_vaddr(evb, 0);
-			if (frm_buffer != NULL) {
-				memcpy(frm_buffer,chan->emb_buf_addr, 255);
-			}
-		}
-	}
-
 	vb2_buffer_done(&vbuf->vb2_buf, buf->vb2_state);
-	if (chan->embedded_data_height == 1 && evb) {
-		evbuf = to_vb2_v4l2_buffer(evb);
-		evbuf->sequence = vbuf->sequence;
-		/*FIXME: define 236 68 bytes metadata*/
-		vb2_set_plane_payload(evb, 0, 68);
-		evb->timestamp = vbuf->vb2_buf.timestamp;
-		vb2_buffer_done(evb, buf->vb2_state);
-	}
 
+	if (chan->embedded_data_height == 1 && buf->vb2_state == VB2_BUF_STATE_DONE)
+		vi5_release_metadata_buffer(chan, vbuf);
 }
 
 static void vi5_capture_enqueue(struct tegra_channel *chan,
@@ -954,8 +957,6 @@ static int vi5_channel_start_streaming(struct vb2_queue *vq, u32 count)
 							sensor_mode->\
 							 image_properties.\
 						      embedded_metadata_height;
-						if (chan->id != 0 && chan->id != 1)
-							chan->embedded_data_height = 0;
 						/* rounding up to page size */
 						emb_buf_size =
 							round_up(chan->\
-- 
2.30.2

